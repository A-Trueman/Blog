<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.LikeMapper">
    <resultMap id="BaseResultMap" type="com.bo.Like">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="article_id" property="articleId" jdbcType="VARCHAR" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="author_name" property="authorName" jdbcType="VARCHAR" />
        <result column="author_id" property="articleId" jdbcType="VARCHAR" />
        <result column="tag" property="tag" jdbcType="VARCHAR" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="pre_article" property="preArticle" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
        <result column="article_create_time" property="articleCreateTime" jdbcType="BIGINT" />
        <result column="read_counts" property="readCounts" jdbcType="INTEGER" />
        <result column="likes" property="likes" jdbcType="INTEGER" />
        <result column="comments" property="comments" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="TINYINT" />
    </resultMap>

    <sql id="Like_Column_List">
        `id`, `article_id`, `title`,
        `user_id`, `username`, `author_name`,
        `author_id`, `tag`, `url`,
        `pre_article`, `create_time`, `article_create_time`,
        `read_counts`, `likes`, `comments`,
        `status`
    </sql>

    <select id="selectLike" resultMap="BaseResultMap" parameterType="map">
        SELECT <include refid="Like_Column_List" />
        FROM `like`
        WHERE `username` = #{username, jdbcType=VARCHAR}
        AND `article_id` = #{articleId, jdbcType=VARCHAR}
        AND `status` = #{status, jdbcType=TINYINT}
    </select>


    <select id="selectLikeList" resultMap="BaseResultMap" parameterType="map">
        SELECT <include refid="Like_Column_List" />
        FROM `like`
        WHERE `username` = #{username, jdbcType=VARCHAR}
        AND `status` = #{status, jdbcType=TINYINT}
        <if test="lastDateTime != null">
            AND `create_time` <![CDATA[ < ]]> #{lastDateTime, jdbcType=BIGINT}
        </if>
        <if test="lessDateTime != null">
            AND `create_time` <![CDATA[ >= ]]> #{lessDateTime, jdbcType=BIGINT}
        </if>
        ORDER BY `create_time` DESC limit 5;
    </select>


    <insert id="replaceLike" parameterType="com.bo.Like">
        replace INTO `like` (`id`, `article_id`, `title`,
        `username`, `author_name`, `tag`,
        `pre_article`, `create_time`, `article_create_time`,
        `status`)
        VALUES (#{id, jdbcType=VARCHAR}, #{articleId, jdbcType=VARCHAR}, #{title, jdbcType=VARCHAR},
        #{username, jdbcType=VARCHAR}, #{authorName, jdbcType=VARCHAR},#{tag, jdbcType=VARCHAR},
        #{preArticle, jdbcType=VARCHAR}, #{createTime, jdbcType=BIGINT}, #{articleCreateTime, jdbcType=BIGINT},
        #{status, jdbcType=TINYINT})
    </insert>


    <delete id="deleteLike" parameterType="map">
        DELETE FROM `like`
        WHERE `username` = #{username, jdbcType=VARCHAR}
        AND `article_id` = #{articleId, jdbcType=VARCHAR}
    </delete>
</mapper>